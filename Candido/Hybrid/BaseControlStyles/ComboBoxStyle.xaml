<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:candido="clr-namespace:Candido.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Variables/ThemeColors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- COMBOBOX -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type candido:ComboBoxToggleButton}">
        <Setter Property="BorderBrush" Value="{StaticResource Hybrid.Button.OuterBorder}" />
        <Setter Property="InnerBorderBrush" Value="{StaticResource Hybrid.Button.InnerBorder}" />
        <Setter Property="Background" Value="{StaticResource Hybrid.Button.Background}" />
        <!--<Setter Property="Background" Value="{StaticResource Hybrid.Foreground}" />-->

        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type candido:ComboBoxToggleButton}">
                    <Border CornerRadius="{StaticResource Hybrid.CornerRadius}" x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" SnapsToDevicePixels="true">
                        <Border x:Name="innerBorder" CornerRadius="{StaticResource Hybrid.CornerRadius}"
                                BorderBrush="{TemplateBinding InnerBorderBrush}" BorderThickness="1,1,1,0">
                            <Border x:Name="splitBorder" Background="Transparent" BorderBrush="Transparent"
                                    BorderThickness="1" HorizontalAlignment="Right" Margin="0"
                                    SnapsToDevicePixels="true"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Polygon x:Name="arrow"
                                      Points="0,0 6,0 3,3"
                                      Fill="{StaticResource Hybrid.ComboBox.Arrow}" HorizontalAlignment="Center"
                                      Margin="0"
                                      VerticalAlignment="Center" />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- IsEditable="True" -->
                        <MultiDataTrigger> <!-- IsMouseOver="True" IsEnabled="True" IsPressed="False" -->
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Hybrid.TextBox.OuterBorder}" />
                            <Setter Property="InnerBorderBrush"
                                    Value="{StaticResource Hybrid.TextBox.InnerBorder}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger> <!-- IsMouseOver="True" -->
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource Hybrid.TextBox.OuterBorder.Focused}" />
                            <Setter Property="InnerBorderBrush"
                                    Value="{StaticResource Hybrid.TextBox.InnerBorder.Focused}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger> <!-- IsEnabled="False" -->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>

                        <!-- IsEditable="False" -->
                        <MultiDataTrigger> <!-- IsMouseOver="True" -->
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource Hybrid.Button.Background.Hover}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource Hybrid.Button.OuterBorder.Hover}" />
                            <Setter Property="InnerBorderBrush"
                                    Value="{StaticResource Hybrid.Button.InnerBorder.Hover}" />

                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Hybrid.Button.Foreground.Hover}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger> <!-- IsPressed="True" -->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource Hybrid.Button.Background.Pressed}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource Hybrid.Button.OuterBorder.Pressed}" />
                            <Setter Property="InnerBorderBrush"
                                    Value="{StaticResource Hybrid.Button.InnerBorder.Pressed}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Hybrid.Button.Foreground.Pressed}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger> <!-- IsEnabled="False" -->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                    Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Border x:Name="dropDownBorder" BorderBrush="{StaticResource Hybrid.ComboBox.PopUp.Background}"
                        BorderThickness="1"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
                                    VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect"
                                           Fill="{Binding Background, ElementName=dropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>

            <candido:ComboBoxToggleButton x:Name="toggleButton" Grid.ColumnSpan="2" Grid.Column="0"
                                          Background="{TemplateBinding Background}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ComboBoxToggleButton}" />

            <ContentPresenter Grid.Column="0" TextElement.Foreground="{TemplateBinding Foreground}"
                              x:Name="contentPresenter"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="toggleButton" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Hybrid.Button.Foreground.Hover}" />
            </Trigger>
            <Trigger Property="IsPressed" SourceName="toggleButton" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Hybrid.Button.Foreground.Pressed}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                    Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Border x:Name="dropDownBorder" BorderBrush="{StaticResource Hybrid.ComboBox.PopUp.Background}"
                        BorderThickness="1"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
                                    VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect"
                                           Fill="{Binding Background, ElementName=dropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>

            <candido:ComboBoxToggleButton x:Name="toggleButton" Grid.ColumnSpan="2" Grid.Column="0"
                                          Background="{TemplateBinding Background}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ComboBoxToggleButton}" />

            <TextBox Grid.Column="0" x:Name="PART_EditableTextBox"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Margin="{TemplateBinding Padding}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     Padding="0"
                     AllowDrop="True"
                     MinWidth="0"
                     MinHeight="0"
                     BorderThickness="0"
                     SelectionBrush="{StaticResource Hybrid.SelectionHighlight}"
                     Foreground="{StaticResource Hybrid.Foreground}"
                     Background="Transparent"
                     FocusVisualStyle="{x:Null}"
                     ScrollViewer.PanningMode="VerticalFirst">
                <!--<TextBox.Template>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <ScrollViewer x:Name="PART_ContentHost" BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Background="BlueViolet"
                                              Margin="0" Focusable="false"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </ControlTemplate>
                        </TextBox.Template>-->
            </TextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" SourceName="PART_EditableTextBox" Value="true">
                <Setter Property="BorderBrush" TargetName="toggleButton"
                        Value="{StaticResource Hybrid.TextBox.OuterBorder.Focused}" />
                <Setter Property="InnerBorderBrush" TargetName="toggleButton"
                        Value="{StaticResource Hybrid.TextBox.InnerBorder.Focused}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="PART_EditableTextBox" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource Hybrid.Button.Background}" />

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />

        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Background" Value="White" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{StaticResource Hybrid.ComboBoxItem.Foreground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,3" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="MinWidth"
                Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            MinWidth="{TemplateBinding MinWidth}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Active}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Active}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Hybrid.Foreground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Blur}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Blur}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Foreground.Blur}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Blur}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Blur}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Foreground.Blur}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Blur}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Blur}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Background.Blur}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Hybrid.ComboBoxItem.Foreground.Blur}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>